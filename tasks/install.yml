---
- name: create adguard system group
  group:
    name: adguard
    system: true
    state: present

- name: create adguard system user
  user:
    name: adguard
    system: true
    shell: "/usr/sbin/nologin"
    group: adguard
    createhome: false
    home: "{{ adguard_dir }}"

- name: create adguard directory
  file:
    path: "{{ adguard_dir }}"
    state: directory
    owner: adguard
    group: adguard
    mode: 0755

- block:
    - name: download adguard to local folder
      become: false
      get_url:
        url: "https://static.adguard.com/adguardhome/release/AdGuardHome_linux_{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}.tar.gz"
        dest: "/tmp/AdGuardHome_linux_{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}.tar.gz"
      register: _download_archive
      until: _download_archive is succeeded
      retries: 5
      delay: 2
      delegate_to: localhost
      check_mode: false

    - name: unpack binaries
      become: false
      unarchive:
        src: "/tmp/AdGuardHome_linux_{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}.tar.gz"
        dest: "/tmp"
      delegate_to: localhost
      check_mode: false

    - name: propagate adguard binaries
      copy:
        src: "/tmp/AdGuardHome/{{ item }}"
        dest: "{{ adguard_dir }}/{{ item }}"
        mode: 0755
        owner: adguard
        group: adguard
      with_items:
        - AdGuardHome
      notify:
        - reload systemd configuration
        - restart adguard

    - name: Set cap_net_bind_service
      capabilities:
        path: "{{ adguard_dir }}/AdGuardHome"
        capability: cap_net_bind_service+eip
        state: present

- name: create systemd service unit
  template:
    src: adguard.service.j2
    dest: /lib/systemd/system/adguard.service
    owner: root
    group: root
    mode: 0644
  notify:
    - restart adguard
